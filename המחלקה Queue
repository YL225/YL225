public class Queue<T> {
    private Node<T> first;
    private Node<T> last;

    public boolean isEmpty() {
        return (first == null);
    }
    public Queue() {
        this.first = null;
        this.last = null;
    }
    public void insert(T x) {
        Node<T> tmp = new Node<T>(x);
        if (first == null) {
            first = tmp;
        } else {
            last.setNext(tmp);
        }
        last = tmp;
    }
    public T remove() {
        T x = first.getValue();
        first = first.getNext();
        if (first == null)
            last = null;
        return x;
    }

    public T head() {
        return first.getValue();
    }
    public String toString() {
        Node<T> pos = this.first;
        String str = "[";
        while (pos != null) {
            str = str + pos.getValue().toString();
            if (pos.getNext() != null)
                str = str + ",";
            pos = pos.getNext();
        }
        str = str + "]";
        return (str);
    }
    public Queue<T> clone(Queue<T> q){
        Queue<T> temp= new Queue<T>();
        Queue<T> temp1= new Queue<T>();
        while (!q.isEmpty()){
            temp.insert(q.head());
            temp1.insert(q.remove());
        }
        while (temp1.isEmpty()){
            q.insert(q.remove());
        }
        return temp;
    }
}
